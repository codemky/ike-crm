<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ike.mapper.ReturnDetailMapper" >
  <resultMap id="BaseResultMap" type="com.ike.pojo.ReturnDetail" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="relation_id" property="relationId" jdbcType="BIGINT" />
    <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
    <result column="order_base_id" property="orderBaseId" jdbcType="BIGINT" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="payment_type" property="paymentType" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_user_id" property="modifyUserId" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, relation_id, employee_id, order_base_id, pay_time, amount, payment_type, remark, 
    create_user_id, create_time, modify_user_id, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ike.pojo.ReturnDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from return_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from return_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from return_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ike.pojo.ReturnDetailExample" >
    delete from return_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ike.pojo.ReturnDetail" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into return_detail (relation_id, employee_id, order_base_id, 
      pay_time, amount, payment_type, 
      remark, create_user_id, create_time, 
      modify_user_id, modify_time)
    values (#{relationId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{orderBaseId,jdbcType=BIGINT}, 
      #{payTime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DOUBLE}, #{paymentType,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyUserId,jdbcType=BIGINT}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ike.pojo.ReturnDetail" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into return_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="relationId != null" >
        relation_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="orderBaseId != null" >
        order_base_id,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyUserId != null" >
        modify_user_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="relationId != null" >
        #{relationId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="orderBaseId != null" >
        #{orderBaseId,jdbcType=BIGINT},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ike.pojo.ReturnDetailExample" resultType="java.lang.Integer" >
    select count(*) from return_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update return_detail
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.relationId != null" >
        relation_id = #{record.relationId,jdbcType=BIGINT},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.orderBaseId != null" >
        order_base_id = #{record.orderBaseId,jdbcType=BIGINT},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentType != null" >
        payment_type = #{record.paymentType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyUserId != null" >
        modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update return_detail
    set id = #{record.id,jdbcType=BIGINT},
      relation_id = #{record.relationId,jdbcType=BIGINT},
      employee_id = #{record.employeeId,jdbcType=BIGINT},
      order_base_id = #{record.orderBaseId,jdbcType=BIGINT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DOUBLE},
      payment_type = #{record.paymentType,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_user_id = #{record.modifyUserId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ike.pojo.ReturnDetail" >
    update return_detail
    <set >
      <if test="relationId != null" >
        relation_id = #{relationId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="orderBaseId != null" >
        order_base_id = #{orderBaseId,jdbcType=BIGINT},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyUserId != null" >
        modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ike.pojo.ReturnDetail" >
    update return_detail
    set relation_id = #{relationId,jdbcType=BIGINT},
      employee_id = #{employeeId,jdbcType=BIGINT},
      order_base_id = #{orderBaseId,jdbcType=BIGINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DOUBLE},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_user_id = #{modifyUserId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>